#!/usr/bin/python
import subprocess
import sys
import os
import string

if(len(sys.argv)<2 or sys.argv[1][0] not in string.ascii_letters+string.digits+"_"):
    print("-- Please enter the shell using the correct syntax:")
    print("   sshEditor <username@hostname>")
    sys.exit()

EDITOR="sublime"
if(len(os.environ['EDITOR'])>0):
    EDITOR=os.environ['EDITOR']
LOCALDIR=os.getcwd()+'/'
REMOTEHOST=sys.argv[1]

dir_curr="~/"
def execute(command):
    global dir_curr
    global REMOTEHOST
    ssh = subprocess.Popen(["ssh", REMOTEHOST, " cd "+dir_curr+";"+command],shell=False,stdout=subprocess.PIPE,stderr=subprocess.PIPE)
    return ssh.stdout.read().splitlines()

dir_curr=execute("pwd")[0]+"/"
dir_prev=dir_curr
uncheckedfiles=set([])
filesInThisFolder=[]
while(True):
    try:
        command_raw=raw_input(REMOTEHOST+":"+dir_curr+"$ ")
        command=command_raw.split()
        if(command[0]=="exit"):
            break
        elif(command[0]=="cd"):
            if(command[1]=="-"):
                new_dir=execute("cd "+dir_prev+';pwd')[0]
            else:
                new_dir=execute("cd "+command[1]+';pwd')[0]
            dir_prev=dir_curr
            dir_curr=new_dir+'/'
        elif(command[0]=="list"):
            # itemize the list of files in the current folder. Exclude directories
            filesInThisFolder=execute('for FILE in `ls`;do if [[ -f "$FILE" ]]; then;echo "$FILE";fi;done')
            for i in range(len(filesInThisFolder)):
                print('{:3d}: '.format(i) +filesInThisFolder[i])
            print('-- Now you can run `[downlaod|upload] <index>` to download/upload the file by its index above.')
        elif(command[0]=="download"):
            # Download the file before editing
            filename=command[1]
            # Choose file by number
            if(len(filesInThisFolder)>0):
                if(filename.isdigit()):
                    filename=filesInThisFolder[int(filename)]
                filesInThisFolder=[]
            os.system("mkdir -p "+LOCALDIR+REMOTEHOST+"/"+dir_curr)
            subprocess.Popen(["scp", REMOTEHOST+":"+dir_curr+filename,LOCALDIR+REMOTEHOST+"/"+dir_curr],shell=False,stdout=subprocess.PIPE,stderr=subprocess.PIPE)
            os.system(EDITOR+" "+LOCALDIR+REMOTEHOST+"/"+dir_curr+filename)
            uncheckedfiles.add(dir_curr+filename)
        elif(command[0]=="upload"):
            # Download the file before editing
            filename=command[1]
            # Choose file by number
            if(len(filesInThisFolder)>0):
                if(filename.isdigit()):
                    filename=filesInThisFolder[int(filename)]
                filesInThisFolder=[]
            subprocess.Popen(["scp", LOCALDIR+REMOTEHOST+"/"+dir_curr+filename,REMOTEHOST+":"+dir_curr],shell=False,stdout=subprocess.PIPE,stderr=subprocess.PIPE)
            uncheckedfiles.remove(dir_curr+filename)
        elif(command[0]=="status"):
            if(len(uncheckedfiles)==0):
                print("-- All files have been synchronized to remote server.")
            else:
                print("-- Files not uploaded to remote server:")
                for filename in uncheckedfiles:
                    print("   "+filename)
                uploadAll=raw_input("-- Type \"yes\" to upload all local files to remote. Type anything else to ignore: ")
                if(uploadAll == "yes"):
                    for filename in uncheckedfiles:
                        subprocess.Popen(["scp", LOCALDIR+REMOTEHOST+"/"+filename,REMOTEHOST+":"+filename],shell=False,stdout=subprocess.PIPE,stderr=subprocess.PIPE)
                    uncheckedfiles=set([])
        elif(command[0]=="help"):
            raise Exception("help")
        else:
            result=execute(command_raw)
            for r in result:
                print(r)
    except:
        print("-- Please use the correct syntax:")
        print("   cd   <your-dir>      # This navigates to the folder of you specified.")
        print("   list                 # Itemize files in the current directory, for the use of the download and upload commands.")
        print("   download <file-name> # This downloads the file to your local computer and edit using your specified editor.")
        print("   upload  <file-name>  # This uploads/overwrites the file to the remote server.")
        print("   status               # List all local files not synchronized with remote.")
        print("   exit                 # Exit the shell.")
        print("                        # All linux commands, except for interactive shell commands, are supported.")
